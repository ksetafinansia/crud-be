{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo CRUD API",
    "description": "A RESTful API for managing todos with API key authentication",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "https://crud-be-production.up.railway.app",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "Todo": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the todo",
            "example": "60d21b4667d0d8992e610c85"
          },
          "title": {
            "type": "string",
            "description": "Title of the todo",
            "maxLength": 100,
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "description": "Description of the todo",
            "maxLength": 500,
            "example": "Write comprehensive documentation for the CRUD API project"
          },
          "completed": {
            "type": "boolean",
            "description": "Indicates if the todo is completed",
            "default": false,
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the todo was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the todo was last updated"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 42
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 2
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page",
            "example": 10
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 5
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there is a next page",
            "example": true
          },
          "hasPrevPage": {
            "type": "boolean",
            "description": "Whether there is a previous page",
            "example": true
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "integer",
            "example": 400
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "VALIDATION_ERROR"
              },
              "message": {
                "type": "string",
                "example": "Invalid input data"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "example": "title"
                    },
                    "message": {
                      "type": "string",
                      "example": "Title is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "The request was invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/v1/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the status of the API service",
        "security": [],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "service": {
                          "type": "string",
                          "example": "API Service"
                        },
                        "status": {
                          "type": "string",
                          "example": "UP"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/todos": {
      "get": {
        "tags": ["Todo"],
        "summary": "Get all todos with pagination",
        "description": "Returns a paginated list of todos",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Page number to retrieve (starting from 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Number of items per page (between 1 and 100)"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "todos": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Todo"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Todos retrieved successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Todo"],
        "summary": "Create a new todo",
        "description": "Creates a new todo with the provided data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Complete project documentation"
                  },
                  "description": {
                    "type": "string",
                    "example": "Write comprehensive documentation for the CRUD API project"
                  },
                  "completed": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "data": {
                      "$ref": "#/components/schemas/Todo"
                    },
                    "message": {
                      "type": "string",
                      "example": "Todo created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/todos/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The todo ID"
        }
      ],
      "get": {
        "tags": ["Todo"],
        "summary": "Get a specific todo",
        "description": "Returns a specific todo by ID",
        "responses": {
          "200": {
            "description": "Todo retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/Todo"
                    },
                    "message": {
                      "type": "string",
                      "example": "Todo retrieved successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": ["Todo"],
        "summary": "Update a todo completely",
        "description": "Updates all fields of a specific todo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated project documentation"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated comprehensive documentation for the CRUD API project"
                  },
                  "completed": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/Todo"
                    },
                    "message": {
                      "type": "string",
                      "example": "Todo updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Todo"],
        "summary": "Update a todo partially",
        "description": "Updates specific fields of a todo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated project documentation"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated comprehensive documentation for the CRUD API project"
                  },
                  "completed": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Todo updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/Todo"
                    },
                    "message": {
                      "type": "string",
                      "example": "Todo updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Todo"],
        "summary": "Delete a todo",
        "description": "Deletes a specific todo by ID",
        "responses": {
          "200": {
            "description": "Todo deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "Todo deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  }
}